.\" This is the manpage of the _printf project
.TH _PRINTF 3 "November 2024" "1.0" "_printf man page"

.SH NAME
_printf \- Implementation of the Function printf 

.SH SYNOPSIS
.B int _printf(const char *format, ...);

.SH DESCRIPTION
The function _printf is a simple version of the standard C library printf function. It produces output according to a format string which can include ordinary characters and format specifiers. The function writes the formatted output to stdout and returns the number of characters printed (excluding the null byte used to end output to strings)

.SH FORMAT SPECIFIERS
The
.B format
string may contain ordinary characters and format specifiers, such as:
.TP
.B \%c
Prints a character.
.TP
.B \%s
Prints a string of characters.
.TP
.B \%i
Prints an integer.
.TP
.B \%d
Prints a decimal (signed integer).

The format specifiers are followed by corresponding arguments that are used to format the output.

.SH PARAMETERS
.B format
The format string containing the characters and format specifiers.
.PP
The function accepts a variable number of arguments corresponding to the format specifiers in the
.B format
string.

.SH RETURN VALUE
The function returns the number of characters printed (excluding the null byte used to end strings).

If the format string is NULL, the function returns 0.

.SH EXAMPLES
Example usage:

.nf
  int len;
  len = _printf("Let's try to printf a simple sentence.\n);
  printf("Printed %d characters.\n", len);  
.fi

This prints:
.nf
Let's try to printf a simple sentence.
Printed 42 characters.
.fi

.SH SEE ALSO
.B printf(3)
.SH AUTHORS
This implementation was created as part of a learning project called printf.
Ichraq Najjar and Haider Saidy , c25.